{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","components/About.jsx","components/Skills.jsx","components/Connect.jsx","components/Projects.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","props","big","medium","value","About","class","Skills","Connect","target","href","src","width","React","Component","Projects","App","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75fe40e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst NavBar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark static-top\">\r\n\t\t<div className=\"container\">\r\n\t\t\t<Link className=\"navbar-brand\" to=\"/\">Home</Link>\r\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/about\">About</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/skills\">Skills</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/connect\">Connect</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/projects\">Projects</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</nav>\r\n);\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst Home = (props) => (\r\n    <div className=\"content\">\r\n        <p className=\"big\">{props.big}</p>\r\n        <p className=\"medium\">{props.medium}</p>\r\n        <Link to=\"/about\" className=\"glow-on-hover\"><input type=\"button\" value=\"ABOUT\"></input></Link>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\nconst About = (props) => (\r\n    <div className=\"content\">\r\n    <p className=\"big\">{props.big}</p>\r\n    <p class=\"tiny\">\r\n    About Me: I Am Abhishek Konar.I am from Aramabagh,Hooghly,West Bengal.I am graduate in B.sc from Burdwan University.I have good knowledge in Web Development as well as in Web Design and Development.My hobby is Photogrphy.Contact No.7001191798\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default About;\r\n\r\n\r\n    \r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Skills = () => (\r\n    <div className=\"content\">\r\n        <p className=\"big\">Skills</p>\r\n        <input type=\"submit\" value=\"HTML\"></input>\r\n        <input type=\"submit\" value=\"CSS\"></input>\r\n        <input type=\"submit\" value=\"BOOTSTRAP\"></input>\r\n        <input type=\"submit\" value=\"JAVASCRIPT\"></input>\r\n        <input type=\"submit\" value=\"PHP\"></input>\r\n        <input type=\"submit\" value=\"MYSQL\"></input>\r\n        <input type=\"submit\" value=\"REACT.JS\"></input>\r\n    </div>\r\n);\r\n\r\nexport default Skills;","import React from 'react';\r\nexport default class Connect extends React.Component\r\n{\r\n    render()\r\n        {\r\n            return(\r\n                <div className=\"content\">\r\n                    <p className=\"big\">Connect</p>\r\n                    <a target=\"_blank\" href=\"https://www.facebook.com/abhishek.konar.79\"><img src=\"https://cdn2.iconfinder.com/data/icons/social-var-1/614/2_-_Facebook-512.png\" width=\"50\"></img></a>\r\n                    <a target=\"_blank\" href=\"https://www.instagram.com/abhishek.konar06/\"><img src=\"https://cdn4.iconfinder.com/data/icons/social-media-2146/512/25_social-512.png\" width=\"50\"></img></a>\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nexport default class Projects extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            \r\n        <div className=\"content\">\r\n            <p className=\"big\">Projects</p>\r\n            <a target=\"_blank\" href=\"https://stackle.onrender.com\"><input type=\"submit\" value=\"PHP-CLOUD\"></input></a>\r\n            <a target=\"_blank\" href=\"https://rainly.onrender.com\"><input type=\"submit\" value=\"REACT-WEATHER\"></input></a>\r\n            <a target=\"_blank\" href=\"https://abhishek.onrender.com\"><input type=\"submit\" value=\"REACT.JS-BLOG\"></input></a>\r\n        </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\nimport { BrowserRouter,Route } from 'react-router-dom';\nimport './App.css'\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Skills from './components/Skills';\nimport Connect from './components/Connect';\nimport Projects from './components/Projects';\n\nfunction App() {;\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" render = {() => <Home big=\"Hey, Hi There !\" medium=\"Welcome to my website\"/>} />\n        <Route path=\"/about\" render = {() => <About big=\"About\" />} />\n        <Route path=\"/skills\" component ={Skills} />\n        <Route path=\"/connect\" component ={Connect} />\n        <Route path=\"/projects\" component ={Projects} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}